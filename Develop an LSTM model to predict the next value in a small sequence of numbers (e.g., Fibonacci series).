import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Generate Fibonacci sequence
fib = [0, 1]
for _ in range(13):  # Generate 15 numbers
    fib.append(fib[-1] + fib[-2])

# Prepare data
X, y = [], []
for i in range(len(fib) - 3):
    X.append(fib[i:i + 3])  # Take 3 numbers as input
    y.append(fib[i + 3])   # Predict the next number
X, y = np.array(X), np.array(y)
X = X.reshape((X.shape[0], X.shape[1], 1))  # Reshape for LSTM

# Build LSTM model
model = Sequential([
    LSTM(50, activation='relu', input_shape=(3, 1)),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse')
model.fit(X, y, epochs=200, verbose=0)

# Predict the next value
test_input = np.array(fib[-3:]).reshape((1, 3, 1))
predicted = model.predict(test_input, verbose=0)
print(f"Last values: {fib[-3:]}")
print(f"Predicted next value: {predicted[0][0]:.2f}")
